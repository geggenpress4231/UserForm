{"ast":null,"code":"// api.tsx\nconst API_BASE_URL = \"http://localhost:5225/users\";\nexport async function fetchUsers(pageNumber, pageSize) {\n  const response = await fetch(`${API_BASE_URL}/?PageNumber=${pageNumber}&PageSize=${pageSize}`);\n\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n\n  return await response.json();\n}\nexport class UserService {\n  constructor() {\n    this.pageNumber = 1;\n    this.pageSize = 30;\n  }\n\n  async loadUsers() {\n    return await fetchUsers(this.pageNumber, this.pageSize);\n  }\n\n  async loadNextPage() {\n    this.pageNumber++;\n    return await this.loadUsers();\n  }\n\n  async loadPreviousPage() {\n    if (this.pageNumber > 1) {\n      this.pageNumber--;\n    }\n\n    return await this.loadUsers();\n  }\n\n}","map":{"version":3,"sources":["D:/medfar_assessment/Utsa-Rabbani/Frontend/src/api/api.tsx"],"names":["API_BASE_URL","fetchUsers","pageNumber","pageSize","response","fetch","ok","Error","status","json","UserService","loadUsers","loadNextPage","loadPreviousPage"],"mappings":"AAAA;AAIA,MAAMA,YAAY,GAAG,6BAArB;AAEA,OAAO,eAAeC,UAAf,CAA0BC,UAA1B,EAA8CC,QAA9C,EAAiF;AACpF,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,YAAa,gBAAeE,UAAW,aAAYC,QAAS,EAAhE,CAA5B;;AACA,MAAI,CAACC,QAAQ,CAACE,EAAd,EAAkB;AACd,UAAM,IAAIC,KAAJ,CAAW,uBAAsBH,QAAQ,CAACI,MAAO,EAAjD,CAAN;AACH;;AACD,SAAO,MAAMJ,QAAQ,CAACK,IAAT,EAAb;AACH;AAED,OAAO,MAAMC,WAAN,CAAkB;AAAA;AAAA,SACbR,UADa,GACQ,CADR;AAAA,SAEbC,QAFa,GAEM,EAFN;AAAA;;AAIC,QAATQ,SAAS,GAAoB;AACtC,WAAO,MAAMV,UAAU,CAAC,KAAKC,UAAN,EAAkB,KAAKC,QAAvB,CAAvB;AACH;;AAEwB,QAAZS,YAAY,GAAoB;AACzC,SAAKV,UAAL;AACA,WAAO,MAAM,KAAKS,SAAL,EAAb;AACH;;AAE4B,QAAhBE,gBAAgB,GAAoB;AAC7C,QAAI,KAAKX,UAAL,GAAkB,CAAtB,EAAyB;AACrB,WAAKA,UAAL;AACH;;AACD,WAAO,MAAM,KAAKS,SAAL,EAAb;AACH;;AAlBoB","sourcesContent":["// api.tsx\r\n\r\nimport { User } from \"../shared/User\";\r\n\r\nconst API_BASE_URL = \"http://localhost:5225/users\";\r\n\r\nexport async function fetchUsers(pageNumber: number, pageSize: number): Promise<User[]> {\r\n    const response = await fetch(`${API_BASE_URL}/?PageNumber=${pageNumber}&PageSize=${pageSize}`);\r\n    if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    return await response.json();\r\n}\r\n\r\nexport class UserService {\r\n    private pageNumber: number = 1;\r\n    private pageSize: number = 30;\r\n\r\n    public async loadUsers(): Promise<User[]> {\r\n        return await fetchUsers(this.pageNumber, this.pageSize);\r\n    }\r\n\r\n    public async loadNextPage(): Promise<User[]> {\r\n        this.pageNumber++;\r\n        return await this.loadUsers();\r\n    }\r\n\r\n    public async loadPreviousPage(): Promise<User[]> {\r\n        if (this.pageNumber > 1) {\r\n            this.pageNumber--;\r\n        }\r\n        return await this.loadUsers();\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}