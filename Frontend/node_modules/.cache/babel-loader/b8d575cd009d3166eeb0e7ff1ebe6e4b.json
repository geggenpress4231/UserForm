{"ast":null,"code":"var _jsxFileName = \"D:\\\\medfar_assessment\\\\Utsa-Rabbani\\\\Frontend\\\\src\\\\components\\\\Exam.tsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Exam extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      errors: {},\n      showSuccessCard: false\n    };\n\n    this.validate = () => {\n      const {\n        firstName,\n        lastName,\n        email\n      } = this.state;\n      const errors = {};\n      let isValid = true;\n      const nameRegex = /^[A-Za-z\\s]+$/;\n\n      if (!firstName.trim()) {\n        errors.firstName = \"First name is required\";\n        isValid = false;\n      } else if (!nameRegex.test(firstName)) {\n        errors.firstName = \"First name cannot contain numbers or special characters\";\n        isValid = false;\n      }\n\n      if (!lastName.trim()) {\n        errors.lastName = \"Last name is required\";\n        isValid = false;\n      } else if (!nameRegex.test(lastName)) {\n        errors.lastName = \"Last name cannot contain numbers or special characters\";\n        isValid = false;\n      }\n\n      if (!email.trim()) {\n        errors.email = \"Email is required\";\n        isValid = false;\n      } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n        errors.email = \"Email is invalid\";\n        isValid = false;\n      }\n\n      this.setState({\n        errors\n      });\n      return isValid;\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState(prevState => ({ ...prevState,\n        [name]: value\n      }));\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n\n      if (this.validate()) {\n        const {\n          firstName,\n          lastName,\n          email\n        } = this.state;\n        const user = {\n          first_name: firstName,\n          last_name: lastName,\n          email: email\n        };\n\n        try {\n          const response = await fetch('http://localhost:5225/users', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(user)\n          });\n\n          if (response.ok) {\n            this.setState({\n              showSuccessCard: true\n            });\n          } else {\n            alert(\"Failed to add user. Please try again.\");\n          }\n        } catch (error) {\n          console.error(\"Error submitting form:\", error);\n          alert(\"An error occurred. Please try again.\");\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    document.title = \"Exam - My React Application\";\n  }\n\n  render() {\n    const {\n      firstName,\n      lastName,\n      email,\n      errors,\n      showSuccessCard\n    } = this.state;\n\n    if (showSuccessCard) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: \"User added successfully!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-info\",\n            onClick: () => this.setState({\n              showSuccessCard: false,\n              firstName: \"\",\n              lastName: \"\",\n              email: \"\",\n              errors: {}\n            }),\n            children: \"Add More User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/example\",\n            className: \"btn btn-secondary\",\n            children: \"Return to Example\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"project-form\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstName\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"firstName\",\n            name: \"firstName\",\n            value: firstName,\n            onChange: this.handleChange,\n            placeholder: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), errors.firstName && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: errors.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastName\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"lastName\",\n            name: \"lastName\",\n            value: lastName,\n            onChange: this.handleChange,\n            placeholder: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), errors.lastName && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: errors.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            value: email,\n            onChange: this.handleChange,\n            placeholder: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group button-group d-flex justify-content-center gap-2 mt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-info btn-lg\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/medfar_assessment/Utsa-Rabbani/Frontend/src/components/Exam.tsx"],"names":["React","Link","Exam","Component","state","firstName","lastName","email","errors","showSuccessCard","validate","isValid","nameRegex","trim","test","setState","handleChange","e","name","value","target","prevState","handleSubmit","preventDefault","user","first_name","last_name","response","fetch","method","headers","body","JSON","stringify","ok","alert","error","console","componentDidMount","document","title","render"],"mappings":";AAAA,OAAOA,KAAP,MAA8C,OAA9C;AAEA,SAASC,IAAT,QAAqB,kBAArB;;AAgBA,OAAO,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAA8C;AAAA;AAAA;AAAA,SACjDC,KADiD,GAClC;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXC,MAAAA,MAAM,EAAE,EAJG;AAKXC,MAAAA,eAAe,EAAE;AALN,KADkC;;AAAA,SAajDC,QAbiD,GAatC,MAAe;AACtB,YAAM;AAAEL,QAAAA,SAAF;AAAaC,QAAAA,QAAb;AAAuBC,QAAAA;AAAvB,UAAiC,KAAKH,KAA5C;AACA,YAAMI,MAAuB,GAAG,EAAhC;AACA,UAAIG,OAAO,GAAG,IAAd;AAEA,YAAMC,SAAS,GAAG,eAAlB;;AAEA,UAAI,CAACP,SAAS,CAACQ,IAAV,EAAL,EAAuB;AACnBL,QAAAA,MAAM,CAACH,SAAP,GAAmB,wBAAnB;AACAM,QAAAA,OAAO,GAAG,KAAV;AACH,OAHD,MAGO,IAAI,CAACC,SAAS,CAACE,IAAV,CAAeT,SAAf,CAAL,EAAgC;AACnCG,QAAAA,MAAM,CAACH,SAAP,GAAmB,yDAAnB;AACAM,QAAAA,OAAO,GAAG,KAAV;AACH;;AAED,UAAI,CAACL,QAAQ,CAACO,IAAT,EAAL,EAAsB;AAClBL,QAAAA,MAAM,CAACF,QAAP,GAAkB,uBAAlB;AACAK,QAAAA,OAAO,GAAG,KAAV;AACH,OAHD,MAGO,IAAI,CAACC,SAAS,CAACE,IAAV,CAAeR,QAAf,CAAL,EAA+B;AAClCE,QAAAA,MAAM,CAACF,QAAP,GAAkB,wDAAlB;AACAK,QAAAA,OAAO,GAAG,KAAV;AACH;;AAED,UAAI,CAACJ,KAAK,CAACM,IAAN,EAAL,EAAmB;AACfL,QAAAA,MAAM,CAACD,KAAP,GAAe,mBAAf;AACAI,QAAAA,OAAO,GAAG,KAAV;AACH,OAHD,MAGO,IAAI,CAAC,eAAeG,IAAf,CAAoBP,KAApB,CAAL,EAAiC;AACpCC,QAAAA,MAAM,CAACD,KAAP,GAAe,kBAAf;AACAI,QAAAA,OAAO,GAAG,KAAV;AACH;;AAED,WAAKI,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd;AACA,aAAOG,OAAP;AACH,KA9CgD;;AAAA,SAgDjDK,YAhDiD,GAgDjCC,CAAD,IAAsC;AACjD,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBF,CAAC,CAACG,MAA1B;AACA,WAAKL,QAAL,CAAcM,SAAS,KAAK,EACxB,GAAGA,SADqB;AAExB,SAACH,IAAD,GAAQC;AAFgB,OAAL,CAAvB;AAIH,KAtDgD;;AAAA,SAwDjDG,YAxDiD,GAwDlC,MAAOL,CAAP,IAAyC;AACpDA,MAAAA,CAAC,CAACM,cAAF;;AACA,UAAI,KAAKb,QAAL,EAAJ,EAAqB;AACjB,cAAM;AAAEL,UAAAA,SAAF;AAAaC,UAAAA,QAAb;AAAuBC,UAAAA;AAAvB,YAAiC,KAAKH,KAA5C;AACA,cAAMoB,IAAI,GAAG;AACTC,UAAAA,UAAU,EAAEpB,SADH;AAETqB,UAAAA,SAAS,EAAEpB,QAFF;AAGTC,UAAAA,KAAK,EAAEA;AAHE,SAAb;;AAMA,YAAI;AACA,gBAAMoB,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgC;AACxDC,YAAAA,MAAM,EAAE,MADgD;AAExDC,YAAAA,OAAO,EAAE;AACL,8BAAgB;AADX,aAF+C;AAKxDC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf;AALkD,WAAhC,CAA5B;;AAQA,cAAIG,QAAQ,CAACO,EAAb,EAAiB;AACb,iBAAKnB,QAAL,CAAc;AAAEN,cAAAA,eAAe,EAAE;AAAnB,aAAd;AACH,WAFD,MAEO;AACH0B,YAAAA,KAAK,CAAC,uCAAD,CAAL;AACH;AACJ,SAdD,CAcE,OAAOC,KAAP,EAAc;AACZC,UAAAA,OAAO,CAACD,KAAR,CAAc,wBAAd,EAAwCA,KAAxC;AACAD,UAAAA,KAAK,CAAC,sCAAD,CAAL;AACH;AACJ;AACJ,KArFgD;AAAA;;AASjDG,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,QAAQ,CAACC,KAAT,GAAiB,6BAAjB;AACH;;AA4EDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEpC,MAAAA,SAAF;AAAaC,MAAAA,QAAb;AAAuBC,MAAAA,KAAvB;AAA8BC,MAAAA,MAA9B;AAAsCC,MAAAA;AAAtC,QAA0D,KAAKL,KAArE;;AAEA,QAAIK,eAAJ,EAAqB;AACjB,0BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,SAAS,EAAC,cAAlB;AAAiC,YAAA,OAAO,EAAE,MAAM,KAAKM,QAAL,CAAc;AAAEN,cAAAA,eAAe,EAAE,KAAnB;AAA0BJ,cAAAA,SAAS,EAAE,EAArC;AAAyCC,cAAAA,QAAQ,EAAE,EAAnD;AAAuDC,cAAAA,KAAK,EAAE,EAA9D;AAAkEC,cAAAA,MAAM,EAAE;AAA1E,aAAd,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAKI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,UAAT;AAAoB,YAAA,SAAS,EAAC,mBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAaH;;AAED,wBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,SAAS,EAAC,cAAhB;AAA+B,QAAA,QAAQ,EAAE,KAAKc,YAA9C;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,EAAE,EAAC,WAFP;AAGI,YAAA,IAAI,EAAC,WAHT;AAII,YAAA,KAAK,EAAEjB,SAJX;AAKI,YAAA,QAAQ,EAAE,KAAKW,YALnB;AAMI,YAAA,WAAW,EAAC;AANhB;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAUKR,MAAM,CAACH,SAAP,iBAAoB;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,sBAAwBG,MAAM,CAACH;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAVzB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAaI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,EAAE,EAAC,UAFP;AAGI,YAAA,IAAI,EAAC,UAHT;AAII,YAAA,KAAK,EAAEC,QAJX;AAKI,YAAA,QAAQ,EAAE,KAAKU,YALnB;AAMI,YAAA,WAAW,EAAC;AANhB;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAUKR,MAAM,CAACF,QAAP,iBAAmB;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,sBAAwBE,MAAM,CAACF;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAVxB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAyBI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,IAAI,EAAC,OADT;AAEI,YAAA,EAAE,EAAC,OAFP;AAGI,YAAA,IAAI,EAAC,OAHT;AAII,YAAA,KAAK,EAAEC,KAJX;AAKI,YAAA,QAAQ,EAAE,KAAKS,YALnB;AAMI,YAAA,WAAW,EAAC;AANhB;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAUKR,MAAM,CAACD,KAAP,iBAAgB;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,sBAAwBC,MAAM,CAACD;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAVrB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzBJ,eAqCI;AAAK,UAAA,SAAS,EAAC,kEAAf;AAAA,iCACI;AAAQ,YAAA,SAAS,EAAC,qBAAlB;AAAwC,YAAA,IAAI,EAAC,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBArCJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA8CH;;AAxJgD","sourcesContent":["import React, { ChangeEvent, FormEvent } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ninterface State {\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    errors: {\r\n        firstName?: string;\r\n        lastName?: string;\r\n        email?: string;\r\n    };\r\n    showSuccessCard: boolean;\r\n}\r\n\r\nexport class Exam extends React.Component<{}, State> {\r\n    state: State = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        errors: {},\r\n        showSuccessCard: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.title = \"Exam - My React Application\";\r\n    }\r\n\r\n    validate = (): boolean => {\r\n        const { firstName, lastName, email } = this.state;\r\n        const errors: State[\"errors\"] = {};\r\n        let isValid = true;\r\n\r\n        const nameRegex = /^[A-Za-z\\s]+$/;\r\n\r\n        if (!firstName.trim()) {\r\n            errors.firstName = \"First name is required\";\r\n            isValid = false;\r\n        } else if (!nameRegex.test(firstName)) {\r\n            errors.firstName = \"First name cannot contain numbers or special characters\";\r\n            isValid = false;\r\n        }\r\n\r\n        if (!lastName.trim()) {\r\n            errors.lastName = \"Last name is required\";\r\n            isValid = false;\r\n        } else if (!nameRegex.test(lastName)) {\r\n            errors.lastName = \"Last name cannot contain numbers or special characters\";\r\n            isValid = false;\r\n        }\r\n\r\n        if (!email.trim()) {\r\n            errors.email = \"Email is required\";\r\n            isValid = false;\r\n        } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\r\n            errors.email = \"Email is invalid\";\r\n            isValid = false;\r\n        }\r\n\r\n        this.setState({ errors });\r\n        return isValid;\r\n    };\r\n\r\n    handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.target;\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        } as Pick<State, keyof State>));\r\n    };\r\n\r\n    handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        if (this.validate()) {\r\n            const { firstName, lastName, email } = this.state;\r\n            const user = {\r\n                first_name: firstName,\r\n                last_name: lastName,\r\n                email: email\r\n            };\r\n\r\n            try {\r\n                const response = await fetch('http://localhost:5225/users', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(user)\r\n                });\r\n\r\n                if (response.ok) {\r\n                    this.setState({ showSuccessCard: true });\r\n                } else {\r\n                    alert(\"Failed to add user. Please try again.\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error submitting form:\", error);\r\n                alert(\"An error occurred. Please try again.\");\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { firstName, lastName, email, errors, showSuccessCard } = this.state;\r\n\r\n        if (showSuccessCard) {\r\n            return (\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">User added successfully!</h5>\r\n                        <button className=\"btn btn-info\" onClick={() => this.setState({ showSuccessCard: false, firstName: \"\", lastName: \"\", email: \"\", errors: {} })}>\r\n                            Add More User\r\n                        </button>\r\n                        <Link to=\"/example\" className=\"btn btn-secondary\">\r\n                            Return to Example\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"form-container\">\r\n                <h2>User Details</h2>\r\n                <form className=\"project-form\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"firstName\"\r\n                            name=\"firstName\"\r\n                            value={firstName}\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"First Name\"\r\n                        />\r\n                        {errors.firstName && <div className=\"error\">{errors.firstName}</div>}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"lastName\"\r\n                            name=\"lastName\"\r\n                            value={lastName}\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"Last Name\"\r\n                        />\r\n                        {errors.lastName && <div className=\"error\">{errors.lastName}</div>}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            value={email}\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"Email\"\r\n                        />\r\n                        {errors.email && <div className=\"error\">{errors.email}</div>}\r\n                    </div>\r\n                    <div className=\"form-group button-group d-flex justify-content-center gap-2 mt-3\">\r\n                        <button className=\"btn btn-info btn-lg\" type=\"submit\">Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}