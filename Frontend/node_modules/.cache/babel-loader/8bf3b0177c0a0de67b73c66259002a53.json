{"ast":null,"code":"// api.tsx\nconst API_BASE_URL = \"http://localhost:5225/users\";\nexport async function fetchUsers(pageNumber, pageSize) {\n  const response = await fetch(`${API_BASE_URL}/?PageNumber=${pageNumber}&PageSize=${pageSize}`);\n\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n\n  return await response.json();\n}\nexport class UserService {\n  constructor() {\n    this._pageNumber = 1;\n    this._pageSize = 30;\n  }\n\n  get pageNumber() {\n    return this._pageNumber;\n  }\n\n  get pageSize() {\n    return this._pageSize;\n  }\n\n  async loadUsers() {\n    return await fetchUsers(this._pageNumber, this._pageSize);\n  }\n\n  async loadNextPage() {\n    this._pageNumber++;\n    return await this.loadUsers();\n  }\n\n  async loadPreviousPage() {\n    if (this._pageNumber > 1) {\n      this._pageNumber--;\n    }\n\n    return await this.loadUsers();\n  }\n\n}","map":{"version":3,"sources":["D:/medfar_assessment/Utsa-Rabbani/Frontend/src/api/api.tsx"],"names":["API_BASE_URL","fetchUsers","pageNumber","pageSize","response","fetch","ok","Error","status","json","UserService","_pageNumber","_pageSize","loadUsers","loadNextPage","loadPreviousPage"],"mappings":"AAAA;AAIA,MAAMA,YAAY,GAAG,6BAArB;AAEA,OAAO,eAAeC,UAAf,CAA0BC,UAA1B,EAA8CC,QAA9C,EAAiF;AACpF,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,YAAa,gBAAeE,UAAW,aAAYC,QAAS,EAAhE,CAA5B;;AACA,MAAI,CAACC,QAAQ,CAACE,EAAd,EAAkB;AACd,UAAM,IAAIC,KAAJ,CAAW,uBAAsBH,QAAQ,CAACI,MAAO,EAAjD,CAAN;AACH;;AACD,SAAO,MAAMJ,QAAQ,CAACK,IAAT,EAAb;AACH;AAED,OAAO,MAAMC,WAAN,CAAkB;AAAA;AAAA,SACbC,WADa,GACS,CADT;AAAA,SAEbC,SAFa,GAEO,EAFP;AAAA;;AAIA,MAAVV,UAAU,GAAW;AAC5B,WAAO,KAAKS,WAAZ;AACH;;AAEkB,MAARR,QAAQ,GAAW;AAC1B,WAAO,KAAKS,SAAZ;AACH;;AAEqB,QAATC,SAAS,GAAoB;AACtC,WAAO,MAAMZ,UAAU,CAAC,KAAKU,WAAN,EAAmB,KAAKC,SAAxB,CAAvB;AACH;;AAEwB,QAAZE,YAAY,GAAoB;AACzC,SAAKH,WAAL;AACA,WAAO,MAAM,KAAKE,SAAL,EAAb;AACH;;AAE4B,QAAhBE,gBAAgB,GAAoB;AAC7C,QAAI,KAAKJ,WAAL,GAAmB,CAAvB,EAA0B;AACtB,WAAKA,WAAL;AACH;;AACD,WAAO,MAAM,KAAKE,SAAL,EAAb;AACH;;AA1BoB","sourcesContent":["// api.tsx\r\n\r\nimport { User } from \"../shared/User\";\r\n\r\nconst API_BASE_URL = \"http://localhost:5225/users\";\r\n\r\nexport async function fetchUsers(pageNumber: number, pageSize: number): Promise<User[]> {\r\n    const response = await fetch(`${API_BASE_URL}/?PageNumber=${pageNumber}&PageSize=${pageSize}`);\r\n    if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    return await response.json();\r\n}\r\n\r\nexport class UserService {\r\n    private _pageNumber: number = 1;\r\n    private _pageSize: number = 30;\r\n\r\n    public get pageNumber(): number {\r\n        return this._pageNumber;\r\n    }\r\n\r\n    public get pageSize(): number {\r\n        return this._pageSize;\r\n    }\r\n\r\n    public async loadUsers(): Promise<User[]> {\r\n        return await fetchUsers(this._pageNumber, this._pageSize);\r\n    }\r\n\r\n    public async loadNextPage(): Promise<User[]> {\r\n        this._pageNumber++;\r\n        return await this.loadUsers();\r\n    }\r\n\r\n    public async loadPreviousPage(): Promise<User[]> {\r\n        if (this._pageNumber > 1) {\r\n            this._pageNumber--;\r\n        }\r\n        return await this.loadUsers();\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}