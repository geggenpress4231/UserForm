{"ast":null,"code":"var _jsxFileName = \"D:\\\\medfar_assessment\\\\Utsa-Rabbani\\\\Frontend\\\\src\\\\components\\\\Exam.tsx\";\nimport React from \"react\";\nimport '../css/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Exam extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      }, () => {\n        this.validateField(name, value);\n      });\n    };\n\n    this.validateField = (name, value) => {\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'firstName':\n        case 'lastName':\n          errors[name] = /^[a-zA-Z]+$/.test(value) ? '' : 'Name cannot contain numbers or special characters';\n          break;\n\n        case 'email':\n          errors.email = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value) ? '' : 'Email is not valid';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        firstName,\n        lastName,\n        email,\n        errors\n      } = this.state;\n\n      if (firstName && lastName && email && !errors.firstName && !errors.lastName && !errors.email) {\n        alert('Form submitted successfully');\n      } else {\n        alert('Please fix the errors in the form');\n      }\n    };\n\n    this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      errors: {\n        firstName: '',\n        lastName: '',\n        email: ''\n      }\n    };\n  }\n\n  componentDidMount() {\n    document.title = \"Exam - My React Application\";\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"project-form\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstName\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"firstName\",\n            name: \"firstName\",\n            placeholder: \"First Name\",\n            value: this.state.firstName,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), this.state.errors.firstName && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: this.state.errors.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 57\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastName\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"lastName\",\n            name: \"lastName\",\n            placeholder: \"Last Name\",\n            value: this.state.lastName,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), this.state.errors.lastName && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: this.state.errors.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 56\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            placeholder: \"Email\",\n            value: this.state.email,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), this.state.errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: this.state.errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 53\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group button-group\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-info\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Exam;","map":{"version":3,"sources":["D:/medfar_assessment/Utsa-Rabbani/Frontend/src/components/Exam.tsx"],"names":["React","Exam","Component","constructor","props","handleChange","event","name","value","target","setState","validateField","errors","state","test","email","handleSubmit","preventDefault","firstName","lastName","alert","componentDidMount","document","title","render"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, FormEvent } from \"react\";\r\nimport '../css/style.css'; \r\n\r\ninterface ExamState {\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    errors: {\r\n        firstName: string;\r\n        lastName: string;\r\n        email: string;\r\n    };\r\n}\r\n\r\nclass Exam extends React.Component<{}, ExamState> {\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            errors: {\r\n                firstName: '',\r\n                lastName: '',\r\n                email: '',\r\n            }\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Exam - My React Application\";\r\n    }\r\n\r\n    handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value } as Pick<ExamState, keyof ExamState>, () => { this.validateField(name, value) });\r\n    };\r\n\r\n    validateField = (name: string, value: string) => {\r\n        let errors = this.state.errors;\r\n\r\n        switch (name) {\r\n            case 'firstName':\r\n            case 'lastName':\r\n                errors[name] = /^[a-zA-Z]+$/.test(value) ? '' : 'Name cannot contain numbers or special characters';\r\n                break;\r\n            case 'email':\r\n                errors.email = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value) ? '' : 'Email is not valid';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({ errors });\r\n    };\r\n\r\n    handleSubmit = (event: FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const { firstName, lastName, email, errors } = this.state;\r\n        if (firstName && lastName && email && !errors.firstName && !errors.lastName && !errors.email) {\r\n            alert('Form submitted successfully');\r\n        } else {\r\n            alert('Please fix the errors in the form');\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form-container\">\r\n                <h2>User Details</h2>\r\n                <form className=\"project-form\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            id=\"firstName\" \r\n                            name=\"firstName\" \r\n                            placeholder=\"First Name\" \r\n                            value={this.state.firstName}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        {this.state.errors.firstName && <span className=\"error\">{this.state.errors.firstName}</span>}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            id=\"lastName\" \r\n                            name=\"lastName\" \r\n                            placeholder=\"Last Name\" \r\n                            value={this.state.lastName}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        {this.state.errors.lastName && <span className=\"error\">{this.state.errors.lastName}</span>}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input \r\n                            type=\"email\" \r\n                            id=\"email\" \r\n                            name=\"email\" \r\n                            placeholder=\"Email\" \r\n                            value={this.state.email}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        {this.state.errors.email && <span className=\"error\">{this.state.errors.email}</span>}\r\n                    </div>\r\n                    <div className=\"form-group button-group\">\r\n                        <button className=\"btn btn-info\" type=\"submit\">Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Exam;\r\n"]},"metadata":{},"sourceType":"module"}