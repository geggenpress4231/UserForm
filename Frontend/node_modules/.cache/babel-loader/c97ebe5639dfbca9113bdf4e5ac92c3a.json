{"ast":null,"code":"var _jsxFileName = \"D:\\\\medfar_assessment\\\\Utsa-Rabbani\\\\Frontend\\\\src\\\\components\\\\Example.tsx\";\nimport React from \"react\";\nimport { fetchUsers, fetchUserById, updateUser, deleteUser } from '../api/api';\nimport { Link } from \"react-router-dom\";\nimport './App.scss';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Example extends React.Component {\n  constructor(props) {\n    super(props);\n    this.debounceTimeout = null;\n\n    this.loadUsers = () => {\n      // Fetch users from the API\n      const {\n        currentPage,\n        pageSize,\n        searchTerm\n      } = this.state;\n      fetchUsers(currentPage, pageSize, searchTerm).then(apiUsers => {\n        this.setState({\n          users: apiUsers,\n          hasMoreUsers: apiUsers.length === pageSize\n        });\n      }).catch(error => {\n        console.error(\"Failed to load users\", error);\n      });\n    };\n\n    this.handleDeleteUser = userId => {\n      // Handle user deletion\n      deleteUser(userId).then(() => {\n        this.setState(prevState => ({\n          users: prevState.users.filter(user => user.id !== userId)\n        }));\n      }).catch(error => {\n        console.error(\"Failed to delete user\", error);\n      });\n    };\n\n    this.handleEditUser = userId => {\n      // Handle user edit request\n      fetchUserById(userId).then(user => {\n        this.setState({\n          editingUser: user,\n          showModal: true\n        });\n      }).catch(error => {\n        console.error(\"Failed to fetch user\", error);\n      });\n    };\n\n    this.handleSaveUser = () => {\n      // Save updated user information\n      if (this.state.editingUser) {\n        updateUser(this.state.editingUser).then(() => {\n          this.setState({\n            showModal: false,\n            editingUser: null\n          });\n          this.loadUsers();\n        }).catch(error => {\n          console.error(\"Failed to update user\", error);\n        });\n      }\n    };\n\n    this.handlePrevious = () => {\n      // Handle pagination (previous page)\n      this.setState(prevState => ({\n        currentPage: Math.max(prevState.currentPage - 1, 1)\n      }), this.loadUsers);\n    };\n\n    this.handleNext = () => {\n      // Handle pagination (next page)\n      this.setState(prevState => ({\n        currentPage: prevState.currentPage + 1\n      }), this.loadUsers);\n    };\n\n    this.handleSearchChange = e => {\n      // Handle search input change with debouncing\n      const searchTerm = e.target.value;\n      this.setState({\n        searchTerm,\n        currentPage: 1\n      });\n\n      if (this.debounceTimeout) {\n        clearTimeout(this.debounceTimeout);\n      }\n\n      this.debounceTimeout = setTimeout(() => {\n        this.loadUsers();\n      }, 300);\n    };\n\n    this.handleInputChange = e => {\n      // Handle form input change for editing user\n      const {\n        name,\n        value\n      } = e.target;\n\n      if (this.state.editingUser) {\n        this.setState(prevState => ({\n          editingUser: { ...prevState.editingUser,\n            [name]: value\n          }\n        }));\n      }\n    };\n\n    this.closeModal = () => {\n      // Close the edit modal\n      this.setState({\n        showModal: false,\n        editingUser: null\n      });\n    };\n\n    this.formatDate = dateString => {\n      // Format date for display\n      const options = {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit'\n      };\n      return new Date(dateString).toLocaleDateString(undefined, options);\n    };\n\n    this.state = {\n      users: [],\n      currentPage: 1,\n      pageSize: 30,\n      searchTerm: \"\",\n      hasMoreUsers: true,\n      showModal: false,\n      editingUser: null\n    };\n  }\n\n  componentDidMount() {\n    document.title = \"Example - My React Application\";\n    this.loadUsers(); // Load users when the component mounts\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // Reload users if pagination or search term changes\n    if (prevState.currentPage !== this.state.currentPage || prevState.pageSize !== this.state.pageSize || prevState.searchTerm !== this.state.searchTerm) {\n      this.loadUsers();\n    }\n  }\n\n  render() {\n    const {\n      users,\n      currentPage,\n      searchTerm,\n      hasMoreUsers,\n      showModal,\n      editingUser\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"example-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control search-input\",\n            value: searchTerm,\n            onChange: this.handleSearchChange,\n            placeholder: \"Find a User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-user-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/exam\",\n            className: \"btn btn-info rounded-pill\",\n            children: \"Add User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date Created\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.first_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.last_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: this.formatDate(user.date_created)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-light\",\n                  onClick: () => this.handleEditUser(user.id),\n                  children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faEdit\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-light\",\n                  onClick: () => this.handleDeleteUser(user.id),\n                  children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faTrash\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 37\n              }, this)]\n            }, user.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-info rounded-pill\",\n          type: \"button\",\n          onClick: this.handlePrevious,\n          disabled: currentPage === 1,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-info rounded-pill\",\n          type: \"button\",\n          onClick: this.handleNext,\n          disabled: !hasMoreUsers,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), showModal && editingUser && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        onClick: this.closeModal,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Update User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"first_name\",\n                value: editingUser.first_name,\n                onChange: this.handleInputChange,\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"last_name\",\n                value: editingUser.last_name,\n                onChange: this.handleInputChange,\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                name: \"email\",\n                value: editingUser.email,\n                onChange: this.handleInputChange,\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-info\",\n              onClick: this.handleSaveUser,\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default Example; // Original code for reference\n\n/*\r\nimport React from \"react\";\r\nimport { User } from \"../shared/User\";\r\n\r\nexport class Example extends React.Component {\r\n    \r\n    private users: User[] = [];\r\n\r\n    public componentDidMount() {\r\n        document.title = \"Example - My React Application\";\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div>\r\n                <h2>Example</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <div className=\"tb-container\">\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Id</th>\r\n                                        <th>First Name</th>\r\n                                        <th>Last Name </th>\r\n                                        <th>Email</th>\r\n                                        <th>Date Created</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.users.map(user => (\r\n                                        <tr>\r\n                                            <td>{user.id}</td>\r\n                                            <td>{user.first_name}</td>\r\n                                            <td>{user.last_name}</td>\r\n                                            <td>{user.email}</td>\r\n                                            <td>{user.date_created}</td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <button\r\n                            className=\"btn btn-info\"\r\n                            type=\"button\"\r\n                            id=\"addressSearch\"\r\n                            onClick={() => this.loadUsers()}\r\n                        >\r\n                            Load Users\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private loadUsers(): void  {\r\n        fetch(\"http://localhost:3000/User\")\r\n        .then(response => {\r\n            response.json()\r\n            .then(apiUsers => {\r\n                this.users = apiUsers;\r\n                this.forceUpdate();\r\n            });\r\n        });\r\n    }\r\n}\r\n*/","map":{"version":3,"sources":["D:/medfar_assessment/Utsa-Rabbani/Frontend/src/components/Example.tsx"],"names":["React","fetchUsers","fetchUserById","updateUser","deleteUser","Link","FontAwesomeIcon","faTrash","faEdit","Example","Component","constructor","props","debounceTimeout","loadUsers","currentPage","pageSize","searchTerm","state","then","apiUsers","setState","users","hasMoreUsers","length","catch","error","console","handleDeleteUser","userId","prevState","filter","user","id","handleEditUser","editingUser","showModal","handleSaveUser","handlePrevious","Math","max","handleNext","handleSearchChange","e","target","value","clearTimeout","setTimeout","handleInputChange","name","closeModal","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","componentDidMount","document","title","componentDidUpdate","prevProps","render","map","first_name","last_name","email","date_created","stopPropagation"],"mappings":"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BJ,eA+BI;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,SAAS,EAAC,cAAhC;AAA+C,cAAA,OAAO,EAAE,KAAKX,cAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAnER;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA+GH;;AAtPmD;AAyPxD,eAAe5B,OAAf,C,CAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { ChangeEvent } from \"react\";\r\nimport { User, fetchUsers, fetchUserById, updateUser, deleteUser } from '../api/api';\r\nimport { Link } from \"react-router-dom\";\r\nimport './App.scss';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ninterface State {\r\n    users: User[];\r\n    currentPage: number;\r\n    pageSize: number;\r\n    searchTerm: string;\r\n    hasMoreUsers: boolean;\r\n    showModal: boolean;\r\n    editingUser: User | null;\r\n}\r\n\r\nexport class Example extends React.Component<{}, State> {\r\n    private debounceTimeout: NodeJS.Timeout | null = null;\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {\r\n            users: [],\r\n            currentPage: 1,\r\n            pageSize: 30,\r\n            searchTerm: \"\",\r\n            hasMoreUsers: true,\r\n            showModal: false,\r\n            editingUser: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Example - My React Application\";\r\n        this.loadUsers(); // Load users when the component mounts\r\n    }\r\n\r\n    componentDidUpdate(prevProps: {}, prevState: State) {\r\n        // Reload users if pagination or search term changes\r\n        if (prevState.currentPage !== this.state.currentPage || prevState.pageSize !== this.state.pageSize || prevState.searchTerm !== this.state.searchTerm) {\r\n            this.loadUsers();\r\n        }\r\n    }\r\n\r\n    loadUsers = () => {\r\n        // Fetch users from the API\r\n        const { currentPage, pageSize, searchTerm } = this.state;\r\n        fetchUsers(currentPage, pageSize, searchTerm)\r\n            .then(apiUsers => {\r\n                this.setState({\r\n                    users: apiUsers,\r\n                    hasMoreUsers: apiUsers.length === pageSize,\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Failed to load users\", error);\r\n            });\r\n    };\r\n\r\n    handleDeleteUser = (userId: string) => {\r\n        // Handle user deletion\r\n        deleteUser(userId)\r\n            .then(() => {\r\n                this.setState(prevState => ({\r\n                    users: prevState.users.filter(user => user.id !== userId)\r\n                }));\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Failed to delete user\", error);\r\n            });\r\n    };\r\n\r\n    handleEditUser = (userId: string) => {\r\n        // Handle user edit request\r\n        fetchUserById(userId)\r\n            .then(user => {\r\n                this.setState({ editingUser: user, showModal: true });\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Failed to fetch user\", error);\r\n            });\r\n    };\r\n\r\n    handleSaveUser = () => {\r\n        // Save updated user information\r\n        if (this.state.editingUser) {\r\n            updateUser(this.state.editingUser)\r\n                .then(() => {\r\n                    this.setState({ showModal: false, editingUser: null });\r\n                    this.loadUsers();\r\n                })\r\n                .catch(error => {\r\n                    console.error(\"Failed to update user\", error);\r\n                });\r\n        }\r\n    };\r\n\r\n    handlePrevious = () => {\r\n        // Handle pagination (previous page)\r\n        this.setState(\r\n            prevState => ({ currentPage: Math.max(prevState.currentPage - 1, 1) }),\r\n            this.loadUsers\r\n        );\r\n    };\r\n\r\n    handleNext = () => {\r\n        // Handle pagination (next page)\r\n        this.setState(\r\n            prevState => ({ currentPage: prevState.currentPage + 1 }),\r\n            this.loadUsers\r\n        );\r\n    };\r\n\r\n    handleSearchChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // Handle search input change with debouncing\r\n        const searchTerm = e.target.value;\r\n        this.setState({ searchTerm, currentPage: 1 });\r\n\r\n        if (this.debounceTimeout) {\r\n            clearTimeout(this.debounceTimeout);\r\n        }\r\n\r\n        this.debounceTimeout = setTimeout(() => {\r\n            this.loadUsers();\r\n        }, 300);\r\n    };\r\n\r\n    handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // Handle form input change for editing user\r\n        const { name, value } = e.target;\r\n        if (this.state.editingUser) {\r\n            this.setState(prevState => ({\r\n                editingUser: { ...prevState.editingUser, [name]: value } as User\r\n            }));\r\n        }\r\n    };\r\n\r\n    closeModal = () => {\r\n        // Close the edit modal\r\n        this.setState({ showModal: false, editingUser: null });\r\n    };\r\n\r\n    formatDate = (dateString: string) => {\r\n        // Format date for display\r\n        const options: Intl.DateTimeFormatOptions = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n        return new Date(dateString).toLocaleDateString(undefined, options);\r\n    };\r\n\r\n    render() {\r\n        const { users, currentPage, searchTerm, hasMoreUsers, showModal, editingUser } = this.state;\r\n\r\n        return (\r\n            <div className=\"example-container\">\r\n                <div className=\"search-container mb-3\">\r\n                    <div className=\"search-wrapper\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control search-input\"\r\n                            value={searchTerm}\r\n                            onChange={this.handleSearchChange}\r\n                            placeholder=\"Find a User\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"add-user-wrapper\">\r\n                        {/* Add User Button */}\r\n                        <Link to=\"/exam\" className=\"btn btn-info rounded-pill\">Add User</Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"table-container\">\r\n                    <table className=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>First Name</th>\r\n                                <th>Last Name</th>\r\n                                <th>Email</th>\r\n                                <th>Date Created</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {users.map(user => (\r\n                                <tr key={user.id}>\r\n                                    <td>{user.first_name}</td>\r\n                                    <td>{user.last_name}</td>\r\n                                    <td>{user.email}</td>\r\n                                    <td>{this.formatDate(user.date_created)}</td>\r\n                                    <td>\r\n                                        <button className=\"btn btn-light\" onClick={() => this.handleEditUser(user.id)}>\r\n                                            <FontAwesomeIcon icon={faEdit} />\r\n                                        </button>\r\n                                        <button className=\"btn btn-light\" onClick={() => this.handleDeleteUser(user.id)}>\r\n                                            <FontAwesomeIcon icon={faTrash} />\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"pagination-buttons\">\r\n                    <button\r\n                        className=\"btn btn-info rounded-pill\"\r\n                        type=\"button\"\r\n                        onClick={this.handlePrevious}\r\n                        disabled={currentPage === 1}\r\n                    >\r\n                        Previous\r\n                    </button>\r\n                    <button\r\n                        className=\"btn btn-info rounded-pill\"\r\n                        type=\"button\"\r\n                        onClick={this.handleNext}\r\n                        disabled={!hasMoreUsers}\r\n                    >\r\n                        Next\r\n                    </button>\r\n                </div>\r\n\r\n                {showModal && editingUser && (\r\n                    <div className=\"modal\" onClick={this.closeModal}>\r\n                        <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n                            <h2>Update User</h2>\r\n                            <form>\r\n                                <div className=\"form-group\">\r\n                                    <label>First Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"first_name\"\r\n                                        value={editingUser.first_name}\r\n                                        onChange={this.handleInputChange}\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Last Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"last_name\"\r\n                                        value={editingUser.last_name}\r\n                                        onChange={this.handleInputChange}\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Email</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        value={editingUser.email}\r\n                                        onChange={this.handleInputChange}\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </div>\r\n                                <button type=\"button\" className=\"btn btn-info\" onClick={this.handleSaveUser}>\r\n                                    Update\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Example;\r\n\r\n// Original code for reference\r\n/*\r\nimport React from \"react\";\r\nimport { User } from \"../shared/User\";\r\n\r\nexport class Example extends React.Component {\r\n    \r\n    private users: User[] = [];\r\n\r\n    public componentDidMount() {\r\n        document.title = \"Example - My React Application\";\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div>\r\n                <h2>Example</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <div className=\"tb-container\">\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Id</th>\r\n                                        <th>First Name</th>\r\n                                        <th>Last Name </th>\r\n                                        <th>Email</th>\r\n                                        <th>Date Created</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.users.map(user => (\r\n                                        <tr>\r\n                                            <td>{user.id}</td>\r\n                                            <td>{user.first_name}</td>\r\n                                            <td>{user.last_name}</td>\r\n                                            <td>{user.email}</td>\r\n                                            <td>{user.date_created}</td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <button\r\n                            className=\"btn btn-info\"\r\n                            type=\"button\"\r\n                            id=\"addressSearch\"\r\n                            onClick={() => this.loadUsers()}\r\n                        >\r\n                            Load Users\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private loadUsers(): void  {\r\n        fetch(\"http://localhost:3000/User\")\r\n        .then(response => {\r\n            response.json()\r\n            .then(apiUsers => {\r\n                this.users = apiUsers;\r\n                this.forceUpdate();\r\n            });\r\n        });\r\n    }\r\n}\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}