{"ast":null,"code":"var _jsxFileName = \"D:\\\\medfar_assessment\\\\Utsa-Rabbani\\\\Frontend\\\\src\\\\components\\\\Exam.tsx\";\nimport React from \"react\";\nimport '../css/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Exam extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      errors: {}\n    };\n\n    this.validate = () => {\n      const {\n        firstName,\n        lastName,\n        email\n      } = this.state;\n      const errors = {};\n      let isValid = true;\n\n      if (!firstName.trim()) {\n        errors.firstName = \"First name is required\";\n        isValid = false;\n      }\n\n      if (!lastName.trim()) {\n        errors.lastName = \"Last name is required\";\n        isValid = false;\n      }\n\n      if (!email.trim()) {\n        errors.email = \"Email is required\";\n        isValid = false;\n      } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n        errors.email = \"Email is invalid\";\n        isValid = false;\n      }\n\n      this.setState({\n        errors\n      });\n      return isValid;\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (this.validate()) {\n        // Perform submission logic here\n        console.log(\"Form submitted successfully!\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    document.title = \"Exam - My React Application\";\n  }\n\n  render() {\n    const {\n      firstName,\n      lastName,\n      email,\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"project-form\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstName\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"firstName\",\n            name: \"firstName\",\n            value: firstName,\n            onChange: this.handleChange,\n            placeholder: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), errors.firstName && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: errors.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastName\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"lastName\",\n            name: \"lastName\",\n            value: lastName,\n            onChange: this.handleChange,\n            placeholder: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), errors.lastName && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: errors.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            value: email,\n            onChange: this.handleChange,\n            placeholder: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group button-group\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-info\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/medfar_assessment/Utsa-Rabbani/Frontend/src/components/Exam.tsx"],"names":["React","Exam","Component","state","firstName","lastName","email","errors","validate","isValid","trim","test","setState","handleChange","e","name","value","target","handleSubmit","preventDefault","console","log","componentDidMount","document","title","render"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, FormEvent } from \"react\";\r\nimport '../css/style.css';\r\n\r\ninterface State {\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    errors: {\r\n        firstName?: string;\r\n        lastName?: string;\r\n        email?: string;\r\n    };\r\n}\r\n\r\nexport class Exam extends React.Component<{}, State> {\r\n    state: State = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        errors: {}\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.title = \"Exam - My React Application\";\r\n    }\r\n\r\n    validate = (): boolean => {\r\n        const { firstName, lastName, email } = this.state;\r\n        const errors: State[\"errors\"] = {};\r\n        let isValid = true;\r\n\r\n        if (!firstName.trim()) {\r\n            errors.firstName = \"First name is required\";\r\n            isValid = false;\r\n        }\r\n        if (!lastName.trim()) {\r\n            errors.lastName = \"Last name is required\";\r\n            isValid = false;\r\n        }\r\n        if (!email.trim()) {\r\n            errors.email = \"Email is required\";\r\n            isValid = false;\r\n        } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\r\n            errors.email = \"Email is invalid\";\r\n            isValid = false;\r\n        }\r\n\r\n        this.setState({ errors });\r\n        return isValid;\r\n    };\r\n\r\n    handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value } as Pick<State, keyof State>);\r\n    };\r\n\r\n    handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        if (this.validate()) {\r\n            // Perform submission logic here\r\n            console.log(\"Form submitted successfully!\");\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { firstName, lastName, email, errors } = this.state;\r\n\r\n        return (\r\n            <div className=\"form-container\">\r\n                <h2>User Details</h2>\r\n                <form className=\"project-form\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"firstName\"\r\n                            name=\"firstName\"\r\n                            value={firstName}\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"First Name\"\r\n                        />\r\n                        {errors.firstName && <div className=\"error\">{errors.firstName}</div>}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"lastName\"\r\n                            name=\"lastName\"\r\n                            value={lastName}\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"Last Name\"\r\n                        />\r\n                        {errors.lastName && <div className=\"error\">{errors.lastName}</div>}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            value={email}\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"Email\"\r\n                        />\r\n                        {errors.email && <div className=\"error\">{errors.email}</div>}\r\n                    </div>\r\n                    <div className=\"form-group button-group\">\r\n                        <button className=\"btn btn-info\" type=\"submit\">Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}